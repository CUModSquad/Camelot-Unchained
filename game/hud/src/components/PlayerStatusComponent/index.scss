/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

@import './components/Pills/index';

.PlayerStatusComponent {
  -webkit-user-select: none !important;
  user-select: none !important;
  -webkit-user-drag: none !important;
  cursor: default !important;
  width: 100%;
  height: 100%;
}

.PlayerStatusComponent--mirrored {
  transform: scaleX(-1) !important;
  -webkit-transform: scaleX(-1) !important;
}

.PlayerStatusComponent__circle {
  position: relative;
  display: inline-block;
  pointer-events: all;
}

.PlayerStatusComponent__circle__avatar {
  position: absolute;
  top: 20px;
  left: 22px;
  height: 100px;
  width: 100px;
  border-radius: 100px;
  border: 2px solid #ececec;
  background-color: #2c2c2c;
  z-index: 3;
  display: flex;
  align-content: center;
  justify-content: center;
  align-items: center;
  img {
    height: 70px;
    width: auto;
    overflow: hidden;
  }
}

.PlayerStatusComponent__circle__leader {
  position: absolute;
  left: 32px;
  top: 37px;
  z-index: 3;
  

  img {
    width: 80px;
    height: 80px;
  }
}

.PlayerStatusComponent__circle__bg {
  position: absolute;
  top: -2.5px;
  left: -2.5px;
  height: 145px;
  width: 145px;
  border-radius: 100px;
  background-color: black;
}

.PlayerStatusComponent__circle__blood {
  position: absolute;
  top: 63px;
  left: 63px;
  width: 0px;
  height: 0px;
  list-style: none;
  padding: 0;
  margin: 0;
  display: block;
  li {
    display: block;
    position: absolute;
    transform-origin: 50%;
    -webkit-transform-origin: 50%;
    transition: all .25s linear .25s;
    border: solid 1px black;
    border-radius: 1px;
    div {
      height: 100%;
      width: 15px;
    }
  }
}

.PlayerStatusComponent__circle__eventIcon {
  position: absolute;
  z-index: 5;
  left: 35px;
  top: 25px;
  div {
    width: 70px;
    height: 70px;
    position: absolute;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
  }
}

.PlayerStatusComponent__circle__eventIcon--piercing {
  background-image: url('https://s32.postimg.org/aeudkfjz9/3675370.png');
}
.PlayerStatusComponent__circle__eventIcon--heal {
  background-image: url('../images/heal.png');
}

.PlayerStatusComponent__circle__flyText {
  position: absolute;
  z-index: 5;
  font-size: 32px;
  left: 20px;
  top: 70px;
  width: 100px;
  text-align: center;
  -webkit-text-stroke-color: black;
  -webkit-text-stroke-width: .1px;
  font-weight: 700;
}

.PlayerStatusComponent__circle__flyText--damage {
  position: absolute;
  -webkit-text-fill-color: red;
  text-align: center;
  width: 100%;
  &:before {
    content: '-'
  }
}
.PlayerStatusComponent__circle__flyText--heal {
  position: absolute;
  -webkit-text-fill-color: limegreen;
  text-align: center;
  width: 100%;
  &:before {
    content: '+'
  }
}

// Health Bars
.PlayerStatusComponent__healthBars {
  position: relative;
  display: inline-block;
  left: 145px;
  top: 20px;
  width: 150px;
  height: 90px;
  display: flex;
  flex-direction: column;
  pointer-events: all;
  
  ul:nth-child(2) {
    position: relative;
    left: -10px;
    transform: skew(20deg);
    -webkit-transform: skew(20deg);
    height: 4%;
  }
  ul:nth-child(3) {
    position: relative;
    left: -2px;
    transform: skew(20deg);
    -webkit-transform: skew(20deg);
    height: 4%;
  }
  ul:nth-child(4) {
    height: 8%;
  }
  ul:nth-child(5) {
    height: 8%;
  }
  ul:nth-child(6) {
    position: relative;
    left: -2px;
    transform: skew(-20deg);
    -webkit-transform: skew(-20deg);
    height: 4%;
  }
  ul:nth-child(7) {
    position: relative;
    left: -10px;
    transform: skew(-20deg);
    -webkit-transform: skew(-20deg);
    height: 4%;
  }
}

.PlayerStatusComponent__healthBars__labels {
  position: absolute;
  flex-direction: column;
  color: white;
  z-index: 2;
  left: -20px;
  top: -2px;
  font-size: 0.7em;
  margin: 0;

  .outer {
    position: relative;
    left: -13px;
  }

  .inner {
    position: relative;
    left: -1px;
  }
}

// Name
.PlayerStatusComponent__name {
  position: relative;
  top: -90px;
  left: 125px;
  color: #ececec;
  font-size: 1.1em;
  width: 170px;
  pointer-events: all;
}

.PlayerStatusComponent__name--mirrored {
  transform: scaleX(-1) !important;
  -webkit-transform: scaleX(-1) !important;
}


// csshake code starts here

@mixin shake($x, $y, $rot, $name, $steps:10, $opacity:false) {
  $r:0deg;
  $h:0px;
  $v:0px; 
  
  $interval: $steps;
  $step: 0%;

  @keyframes #{$name}{ 
    @while $step < 100% {
      @if ($rot != 0deg){ $r : random($rot) - $rot/2;} 
        @else { $r : 0deg; }
      @if ($x != 0px){ $h : random($x) - $x/2; } 
        @else { $h : 0px; }
      @if ($y != 0px){ $v : random($y) - $y/2; } 
        @else { $v : 0px; }
    
      @if($step == 0%){
        #{$step} {
          transform: translate(0px, 0px) rotate(0deg);
          @if($opacity){
            opacity: random(10)*.1;
          }
        }  
      } @else {
        #{$step} {
          transform: translate($h, $v) rotate($r);
          @if($opacity){
            opacity: random(10)*.1; 
          }
        }
      }
      $step: $step + $interval;
    }

  }

  $r:0deg;
  $h:0px;
  $v:0px; 
  
  $interval: $steps;
  $step: 0%;

  @-webkit-keyframes #{$name}{ 
    @while $step < 100% {
      @if ($rot != 0deg){ $r : random($rot) - $rot/2;} 
        @else { $r : 0deg; }
      @if ($x != 0px){ $h : random($x) - $x/2; } 
        @else { $h : 0px; }
      @if ($y != 0px){ $v : random($y) - $y/2; } 
        @else { $v : 0px; }
    
      @if($step == 0%){
        #{$step} {
          -webkit-transform: translate(0px, 0px) rotate(0deg);
          @if($opacity){
            opacity: random(10)*.1;
          }
        }  
      } @else {
        #{$step} {
          -webkit-transform: translate($h, $v) rotate($r);
          @if($opacity){
            opacity: random(10)*.1; 
          }
        }
      }
      $step: $step + $interval;
    }

  }
}

@mixin shake-mirrored($x, $y, $rot, $name, $steps:10, $opacity:false) {
  $r:0deg;
  $h:0px;
  $v:0px; 
  
  $interval: $steps;
  $step: 0%;

  @keyframes #{$name}{ 
    @while $step < 100% {
      @if ($rot != 0deg){ $r : random($rot) - $rot/2;} 
        @else { $r : 0deg; }
      @if ($x != 0px){ $h : random($x) - $x/2; } 
        @else { $h : 0px; }
      @if ($y != 0px){ $v : random($y) - $y/2; } 
        @else { $v : 0px; }
    
      @if($step == 0%){
        #{$step} {
          transform: translate(0px, 0px) rotate(0deg) scaleX(-1);
          @if($opacity){
            opacity: random(10)*.1;
          }
        }  
      } @else {
        #{$step} {
          transform: translate($h, $v) rotate($r) scaleX(-1);
          @if($opacity){
            opacity: random(10)*.1; 
          }
        }
      }
      $step: $step + $interval;
    }

  }

  $r:0deg;
  $h:0px;
  $v:0px; 
  
  $interval: $steps;
  $step: 0%;

  @-webkit-keyframes #{$name}{ 
    @while $step < 100% {
      @if ($rot != 0deg){ $r : random($rot) - $rot/2;} 
        @else { $r : 0deg; }
      @if ($x != 0px){ $h : random($x) - $x/2; } 
        @else { $h : 0px; }
      @if ($y != 0px){ $v : random($y) - $y/2; } 
        @else { $v : 0px; }
    
      @if($step == 0%){
        #{$step} {
          -webkit-transform: translate(0px, 0px) rotate(0deg) scaleX(-1);
          @if($opacity){
            opacity: random(10)*.1;
          }
        }  
      } @else {
        #{$step} {
          -webkit-transform: translate($h, $v) rotate($r) scaleX(-1);
          @if($opacity){
            opacity: random(10)*.1; 
          }
        }
      }
      $step: $step + $interval;
    }

  }
}

// reset
$duration:100ms;
$base-name:shake-base;
$iteration:infinite;
$timing:ease-in-out;
$delay:0s;

// The animation
@mixin animation($name, $dur: $duration, $iter: $iteration, $tim: $timing, $del: $delay){
	animation-name: $name;
	animation-duration: $dur;
	animation-iteration-count: $iter;
	animation-timing-function: $tim;
	animation-delay: $del;
  -webkit-animation-name: $name;
	-webkit-animation-duration: $dur;
	-webkit-animation-iteration-count: $iter;
	-webkit-animation-timing-function: $tim;
	-webkit-animation-delay: $del;
}


.shakeit {
	
  @include animation($base-name);
	
	&.freez {
		@include animation($base-name);
		&.shake-hard { @include animation(shake-hard); }
		&.shake-slow { @include animation(shake-slow, 5s); }
		&.shake-little { @include animation(shake-little); }
		&.shake-horizontal { @include animation(shake-horizontal); }
		&.shake-vertical { @include animation(shake-vertical); }
		&.shake-rotate { @include animation(shake-rotate); }
		&.shake-opacity { @include animation(shake-opacity, 200ms); }
		&.shake-crazy { @include animation(shake-crazy); }
		animation-play-state: paused;
		&:hover {
			animation-play-state: running;
			-webkit-animation-play-state: running;
		}
	}
	
	// Specific shakings
	&.shake-hard:hover { @include animation(shake-hard); }
	&.shake-slow:hover { @include animation(shake-slow, 5s); }
	&.shake-little:hover { @include animation(shake-little); }
	&.shake-horizontal:hover { @include animation(shake-horizontal); }
	&.shake-vertical:hover { @include animation(shake-vertical); }
	&.shake-rotate:hover { @include animation(shake-rotate); }
	&.shake-opacity:hover { @include animation(shake-opacity, 200ms); }
	&.shake-crazy:hover { @include animation(shake-crazy); }

	&.shake-constant { 
		@include animation($base-name);
		&.shake-hard { @include animation(shake-hard); }
		&.shake-slow { @include animation(shake-slow, 5s); }
		&.shake-little { @include animation(shake-little); }
		&.shake-horizontal { @include animation(shake-horizontal); }
		&.shake-vertical { @include animation(shake-vertical); }
		&.shake-rotate { @include animation(shake-rotate); }
		&.shake-opacity { @include animation(shake-opacity, 200ms); }
		&.shake-crazy { @include animation(shake-crazy); }
		&.hover-stop:hover{
			animation-play-state: paused;
			-webkit-animation-play-state: paused;
		}
	}
	&.shake-delay { @include animation($base-name, $duration, $iteration, $timing, 4s); }

}

.shakeit-mirrored {
	
  @include animation(shake-base-mirrored);
	
	&.freez {
		@include animation(shake-base-mirrored);
		&.shake-hard-mirrored { @include animation(shake-hard-mirrored); }
		&.shake-slow-mirrored { @include animation(shake-slow-mirrored, 5s); }
		&.shake-little-mirrored { @include animation(shake-little-mirrored); }
		&.shake-horizontal-mirrored { @include animation(shake-horizontal-mirrored); }
		&.shake-vertical-mirrored { @include animation(shake-vertical-mirrored); }
		&.shake-rotate-mirrored { @include animation(shake-rotate-mirrored); }
		&.shake-opacity-mirrored { @include animation(shake-opacity-mirrored, 200ms); }
		&.shake-crazy-mirrored { @include animation(shake-crazy-mirrored); }
		animation-play-state: paused;
		&:hover {
			animation-play-state: running;
			-webkit-animation-play-state: running;
		}
	}
	
	// Specific shakings
	&.shake-hard-mirrored:hover { @include animation(shake-hard-mirrored); }
	&.shake-slow-mirrored:hover { @include animation(shake-slow-mirrored, 5s); }
	&.shake-little-mirrored:hover { @include animation(shake-little-mirrored); }
	&.shake-horizontal-mirrored:hover { @include animation(shake-horizontal-mirrored); }
	&.shake-vertical-mirrored:hover { @include animation(shake-vertical-mirrored); }
	&.shake-rotate-mirrored:hover { @include animation(shake-rotate-mirrored); }
	&.shake-opacity-mirrored:hover { @include animation(shake-opacity-mirrored, 200ms); }
	&.shake-crazy-mirrored:hover { @include animation(shake-crazy-mirrored); }

	&.shake-constant { 
		@include animation(shake-base-mirrored);
		&.shake-hard-mirrored { @include animation(shake-hard-mirrored); }
		&.shake-slow-mirrored { @include animation(shake-slow-mirrored, 5s); }
		&.shake-little-mirrored { @include animation(shake-little-mirrored); }
		&.shake-horizontal-mirrored { @include animation(shake-horizontal-mirrored); }
		&.shake-vertical-mirrored { @include animation(shake-vertical-mirrored); }
		&.shake-rotate-mirrored { @include animation(shake-rotate-mirrored); }
		&.shake-opacity-mirrored { @include animation(shake-opacity-mirrored, 200ms); }
		&.shake-crazy-mirrored { @include animation(shake-crazy-mirrored); }
		&.hover-stop:hover{
			animation-play-state: paused;
			-webkit-animation-play-state: paused;
		}
	}
	&.shake-delay-mirrored { @include animation(shake-base-mirrored, $duration, $iteration, $timing, 4s); }

}


// The animations: its names and settings to call from animation mixin
@include shake(5px, 5px, 3deg, 'shake-base', 2);
@include shake(2px, 2px, 1deg, 'shake-little', 2);
@include shake(20px, 20px, 7deg, 'shake-slow', 2);
@include shake(20px, 20px, 7deg, 'shake-hard', 2);
@include shake(20px, 0px, 0deg, 'shake-horizontal', 2);
@include shake(0px, 20px, 0deg, 'shake-vertical', 2);
@include shake(0px, 0px, 15deg, 'shake-rotate', 2);
@include shake(10px, 10px, 5deg, 'shake-opacity', 10, true);
@include shake(40px, 40px, 20deg, 'shake-crazy', 10, true);

@include shake-mirrored(5px, 5px, 3deg, 'shake-base-mirrored', 2);
@include shake-mirrored(2px, 2px, 1deg, 'shake-little-mirrored', 2);
@include shake-mirrored(20px, 20px, 7deg, 'shake-slow-mirrored', 2);
@include shake-mirrored(20px, 20px, 7deg, 'shake-hard-mirrored', 2);
@include shake-mirrored(20px, 0px, 0deg, 'shake-horizontal-mirrored', 2);
@include shake-mirrored(0px, 20px, 0deg, 'shake-vertical-mirrored', 2);
@include shake-mirrored(0px, 0px, 15deg, 'shake-rotate-mirrored', 2);
@include shake-mirrored(10px, 10px, 5deg, 'shake-opacity-mirrored', 10, true);
@include shake-mirrored(40px, 40px, 20deg, 'shake-crazy-mirrored', 10, true);

// csshake code ends here
